// Code generated by MockGen. DO NOT EDIT.
// Source: config.go
//
// Generated by this command:
//
//	mockgen -source=config.go -destination=mock_infra/mock_config.go -package=mock_infra ConfigRepository
//

// Package mock_infra is a generated GoMock package.
package mock_infra

import (
	reflect "reflect"

	"github.com/canpok1/ai-feed/internal/infra"
	gomock "go.uber.org/mock/gomock"
)

// MockConfigRepository is a mock of ConfigRepository interface.
type MockConfigRepository struct {
	ctrl     *gomock.Controller
	recorder *MockConfigRepositoryMockRecorder
	isgomock struct{}
}

// MockConfigRepositoryMockRecorder is the mock recorder for MockConfigRepository.
type MockConfigRepositoryMockRecorder struct {
	mock *MockConfigRepository
}

// NewMockConfigRepository creates a new mock instance.
func NewMockConfigRepository(ctrl *gomock.Controller) *MockConfigRepository {
	mock := &MockConfigRepository{ctrl: ctrl}
	mock.recorder = &MockConfigRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfigRepository) EXPECT() *MockConfigRepositoryMockRecorder {
	return m.recorder
}

// GetDefaultAIModel mocks base method.
func (m *MockConfigRepository) GetDefaultAIModel() (*infra.AIModelConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDefaultAIModel")
	ret0, _ := ret[0].(*infra.AIModelConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDefaultAIModel indicates an expected call of GetDefaultAIModel.
func (mr *MockConfigRepositoryMockRecorder) GetDefaultAIModel() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDefaultAIModel", reflect.TypeOf((*MockConfigRepository)(nil).GetDefaultAIModel))
}

// GetDefaultOutputs mocks base method.
func (m *MockConfigRepository) GetDefaultOutputs() ([]*infra.OutputConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDefaultOutputs")
	ret0, _ := ret[0].([]*infra.OutputConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDefaultOutputs indicates an expected call of GetDefaultOutputs.
func (mr *MockConfigRepositoryMockRecorder) GetDefaultOutputs() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDefaultOutputs", reflect.TypeOf((*MockConfigRepository)(nil).GetDefaultOutputs))
}

// GetDefaultPrompt mocks base method.
func (m *MockConfigRepository) GetDefaultPrompt() (*infra.PromptConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDefaultPrompt")
	ret0, _ := ret[0].(*infra.PromptConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDefaultPrompt indicates an expected call of GetDefaultPrompt.
func (mr *MockConfigRepositoryMockRecorder) GetDefaultPrompt() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDefaultPrompt", reflect.TypeOf((*MockConfigRepository)(nil).GetDefaultPrompt))
}

// GetDefaultSystemPrompt mocks base method.
func (m *MockConfigRepository) GetDefaultSystemPrompt() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDefaultSystemPrompt")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDefaultSystemPrompt indicates an expected call of GetDefaultSystemPrompt.
func (mr *MockConfigRepositoryMockRecorder) GetDefaultSystemPrompt() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDefaultSystemPrompt", reflect.TypeOf((*MockConfigRepository)(nil).GetDefaultSystemPrompt))
}
