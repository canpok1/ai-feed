// Code generated by MockGen. DO NOT EDIT.
// Source: ../profile.go
//
// Generated by this command:
//
//	mockgen -source=../profile.go -destination=./profile.go
//

// Package mock_domain is a generated GoMock package.
package mock_domain

import (
	reflect "reflect"

	entity "github.com/canpok1/ai-feed/internal/domain/entity"
	gomock "go.uber.org/mock/gomock"
)

// MockProfileRepository is a mock of ProfileRepository interface.
type MockProfileRepository struct {
	ctrl     *gomock.Controller
	recorder *MockProfileRepositoryMockRecorder
	isgomock struct{}
}

// MockProfileRepositoryMockRecorder is the mock recorder for MockProfileRepository.
type MockProfileRepositoryMockRecorder struct {
	mock *MockProfileRepository
}

// NewMockProfileRepository creates a new mock instance.
func NewMockProfileRepository(ctrl *gomock.Controller) *MockProfileRepository {
	mock := &MockProfileRepository{ctrl: ctrl}
	mock.recorder = &MockProfileRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProfileRepository) EXPECT() *MockProfileRepositoryMockRecorder {
	return m.recorder
}

// LoadProfile mocks base method.
func (m *MockProfileRepository) LoadProfile() (*entity.Profile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadProfile")
	ret0, _ := ret[0].(*entity.Profile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LoadProfile indicates an expected call of LoadProfile.
func (mr *MockProfileRepositoryMockRecorder) LoadProfile() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadProfile", reflect.TypeOf((*MockProfileRepository)(nil).LoadProfile))
}
